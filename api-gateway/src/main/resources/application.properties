spring.application.name=api-gateway

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost

logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=TRACE
logging.level.org.springframework.cloud.gateway=TRACE
logging.level.org.springframework.web.reactive.DispatcherHandler=TRACE
logging.level.reactor.netty.http.client=DEBUG

spring.cloud.gateway.routes[0].id=discovery-server
spring.cloud.gateway.routes[0].uri=http://localhost:8761
spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/eureka/web(?<segment>/?.*), /${segment}

spring.cloud.gateway.routes[1].id=discovery-server-static
spring.cloud.gateway.routes[1].uri=http://localhost:8761
spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka/**

spring.cloud.gateway.routes[2].id=user-service
spring.cloud.gateway.routes[2].uri=lb://user-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/users/**
spring.cloud.gateway.routes[2].filters[0]=TokenRelay

spring.cloud.gateway.routes[3].id=question-service
spring.cloud.gateway.routes[3].uri=lb://question-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/questions
spring.cloud.gateway.routes[3].filters[0]=TokenRelay

spring.cloud.gateway.routes[4].id=user-service-swagger
spring.cloud.gateway.routes[4].uri=lb://user-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/aggregate/user-service/api-docs
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/aggregate/user-service/api-docs, /api-docs

spring.cloud.gateway.routes[5].id=question-service-swagger
spring.cloud.gateway.routes[5].uri=lb://question-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/aggregate/question-service/api-docs
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/aggregate/question-service/api-docs, /api-docs

spring.cloud.gateway.routes[6].id=notification-service
spring.cloud.gateway.routes[6].uri=lb:ws://notification-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/ws/notify/**
spring.cloud.gateway.routes[6].filters[0]=TokenRelay




springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config

#ws

springdoc.swagger-ui.oauthrization-url=http://localhost:8080/webjars/swagger-ui/oauth2-redirect.html
springdoc.swagger-ui.oauth.client-id=spring-cloud-client
springdoc.swagger-ui.oauth.client-secret=ZbVfKyoWs4kFY6Fsn2QfSkjc8oYRqTY2

springdoc.swagger-ui.urls[0].name=user-service
springdoc.swagger-ui.urls[0].url=/aggregate/user-service/api-docs

springdoc.swagger-ui.urls[1].name=question-service
springdoc.swagger-ui.urls[1].url=/aggregate/question-service/api-docs


# OAuth2 Resource Server (JWT)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/ms-demo-realm

# OAuth2 Client Config for Keycloak
spring.security.oauth2.client.registration.keycloak.client-id=spring-cloud-client
spring.security.oauth2.client.registration.keycloak.client-secret=ZbVfKyoWs4kFY6Fsn2QfSkjc8oYRqTY2
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8181/realms/ms-demo-realm
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8181/realms/ms-demo-realm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8181/realms/ms-demo-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8181/realms/ms-demo-realm/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# CORS config (optional - uncomment to enable)
#spring.cloud.gateway.default-filters=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOriginPatterns=*
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowCredentials=true
#spring.cloud.gateway.globalcors.cors-configurations.[/**].maxAge=3600


